# -*- mode: ruby -*- 
# vi: set ft=ruby :

#All Vagrant configuration is done below. The 2 in Vagrant.configure
#configures the configuration version we support older styles for
#backwards compatibility. Please don't change it unless you know what
#you're doing.
Vagrant.configure("2") do |config|
config.vm.box_check_update = true
config.vm.provider "virtualbox" do |vb|
vb.customize ["modifyvm", :id, "--usb", "on"]
vb.customize ["modifyvm", :id, "--usbehci", "off"]
vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
vb.customize ["modifyvm", :id, "--nicpromisc4", "allow-all"]
vb.customize ["modifyvm", :id, "--nicpromisc5", "allow-all"]
vb.cpus = 1
end
config.vm.define "router1" do |router1|
router1.vm.box = "bento/ubuntu-16.04"
router1.vm.hostname = "router1"
router1.vm.network "private_network", virtualbox__intnet: "broadcast_router-south-1", auto_config: false
router1.vm.network "private_network", virtualbox__intnet: "broadcast_router-inter-1", auto_config: false
router1.vm.network "private_network", virtualbox__intnet: "broadcast_router-inter-3", auto_config: false
router1.vm.provision "shell", inline: <<-SHELL
echo " Quagga router1 start installing"
#sudo sysctl -w net.ipv4.ip_forward=1
sudo apt-get update
sudo apt-get install quagga quagga-doc traceroute
sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf
sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf
sudo chown quagga.quaggavty /etc/quagga/*.conf
sudo /etc/init.d/quagga start
sudo sed -i s'/zebra=no/zebra=yes/' /etc/quagga/daemons
sudo sed -i s'/ospfd=no/ospfd=yes/' /etc/quagga/daemons
sudo echo 'VTYSH_PAGER=more' >>/etc/environment
sudo echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc
sudo /etc/init.d/quagga restart
echo "Routing Protocol ospf Configuration Started"
sudo vtysh -c '
configure terminal
router ospf
network 192.168.1.0/24 area 0.0.0.0
network 192.168.100.0/24 area 0.0.0.0
network 192.168.101.0/24 area 0.0.0.0
exit
interface eth1
ip address 192.168.1.254/24
exit
interface eth2
ip address 192.168.100.1/24
exit
interface eth3
ip address 192.168.101.2/24
do write
exit
exit
ip forwarding
exit'
echo 'THIS IS CUSTUM SCRIPT' 
echo "Configuration END"
echo "router1 is ready to Use"
SHELL
# router1.vm.provision "shell", path: "common.sh"
router1.vm.provider "virtualbox" do |vb|
vb.memory = 1024
end
end
config.vm.define "router2" do |router2|
router2.vm.box = "bento/ubuntu-16.04"
router2.vm.hostname = "router2"
router2.vm.network "private_network", virtualbox__intnet: "broadcast_router-south-2", auto_config: false
router2.vm.network "private_network", virtualbox__intnet: "broadcast_router-inter-2", auto_config: false
router2.vm.network "private_network", virtualbox__intnet: "broadcast_router-inter-1", auto_config: false
router2.vm.provision "shell", inline: <<-SHELL
echo " Quagga router2 start installing"
#sudo sysctl -w net.ipv4.ip_forward=1
sudo apt-get update
sudo apt-get install quagga quagga-doc traceroute
sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf
sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf
sudo chown quagga.quaggavty /etc/quagga/*.conf
sudo /etc/init.d/quagga start
sudo sed -i s'/zebra=no/zebra=yes/' /etc/quagga/daemons
sudo sed -i s'/ospfd=no/ospfd=yes/' /etc/quagga/daemons
sudo echo 'VTYSH_PAGER=more' >>/etc/environment
sudo echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc
sudo /etc/init.d/quagga restart
echo "Routing Protocol ospf Configuration Started"
sudo vtysh -c '
configure terminal
router ospf
network 192.168.2.0/24 area 0.0.0.0
network 192.168.100.0/24 area 0.0.0.0
network 192.168.102.0/24 area 0.0.0.0
exit
interface eth1
ip address 192.168.2.254/24
exit
interface eth2
ip address 192.168.100.2/24
exit
interface eth3
ip address 192.168.102.2/24
do write
exit
exit
ip forwarding
exit'
echo 'THIS IS CUSTUM SCRIPT' 
echo "Configuration END"
echo "router2 is ready to Use"
SHELL
# router2.vm.provision "shell", path: "common.sh"
router2.vm.provider "virtualbox" do |vb|
vb.memory = 1024
end
end
config.vm.define "router3" do |router3|
router3.vm.box = "bento/ubuntu-16.04"
router3.vm.hostname = "router3"
router3.vm.network "private_network", virtualbox__intnet: "broadcast_router-south-3", auto_config: false
router3.vm.network "private_network", virtualbox__intnet: "broadcast_router-inter-3", auto_config: false
router3.vm.network "private_network", virtualbox__intnet: "broadcast_router-inter-2", auto_config: false
router3.vm.provision "shell", inline: <<-SHELL
echo " Quagga router3 start installing"
#sudo sysctl -w net.ipv4.ip_forward=1
sudo apt-get update
sudo apt-get install quagga quagga-doc traceroute
sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf
sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf
sudo chown quagga.quaggavty /etc/quagga/*.conf
sudo /etc/init.d/quagga start
sudo sed -i s'/zebra=no/zebra=yes/' /etc/quagga/daemons
sudo sed -i s'/ospfd=no/ospfd=yes/' /etc/quagga/daemons
sudo echo 'VTYSH_PAGER=more' >>/etc/environment
sudo echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc
sudo /etc/init.d/quagga restart
echo "Routing Protocol ospf Configuration Started"
sudo vtysh -c '
configure terminal
router ospf
network 192.168.3.0/24 area 0.0.0.0
network 192.168.101.0/24 area 0.0.0.0
network 192.168.102.0/24 area 0.0.0.0
exit
interface eth1
ip address 192.168.3.254/24
exit
interface eth2
ip address 192.168.101.1/24
exit
interface eth3
ip address 192.168.102.1/24
do write
exit
exit
ip forwarding
exit'
echo 'THIS IS CUSTUM SCRIPT' 
echo "Configuration END"
echo "router3 is ready to Use"
SHELL
# router3.vm.provision "shell", path: "common.sh"
router3.vm.provider "virtualbox" do |vb|
vb.memory = 1024
end
end
config.vm.define "hosta" do |hosta|
hosta.vm.box = "bento/ubuntu-16.04"
hosta.vm.hostname = "hosta"
hosta.vm.network "private_network", ip: "192.168.1.1", netmask: "255.255.255.0", virtualbox__intnet: "broadcast_router-south-1", auto_config: true
hosta.vm.provision "shell", run: "always", inline: <<-SHELL
echo "Static Routig configuration Started for hosta"
sudo sysctl -w net.ipv4.ip_forward=1
sudo route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.254 dev eth1
echo 'THIS IS CUSTUM SCRIPT' 
echo "Configuration END"
echo "hosta is ready to Use"
SHELL
hosta.vm.provider "virtualbox" do |vb|
vb.memory = 1024
end
end
config.vm.define "hostb" do |hostb|
hostb.vm.box = "bento/ubuntu-16.04"
hostb.vm.hostname = "hostb"
hostb.vm.network "private_network", ip: "192.168.2.1", netmask: "255.255.255.0", virtualbox__intnet: "broadcast_router-south-2", auto_config: true
hostb.vm.provision "shell", run: "always", inline: <<-SHELL
echo "Static Routig configuration Started for hostb"
sudo sysctl -w net.ipv4.ip_forward=1
sudo route add -net 192.168.2.0 netmask 255.255.255.0 gw 192.168.2.254 dev eth1
echo 'THIS IS CUSTUM SCRIPT' 
echo "Configuration END"
echo "hostb is ready to Use"
SHELL
hostb.vm.provider "virtualbox" do |vb|
vb.memory = 1024
end
end
config.vm.define "hostc" do |hostc|
hostc.vm.box = "bento/ubuntu-16.04"
hostc.vm.hostname = "hostc"
hostc.vm.network "private_network", ip: "192.168.3.1", netmask: "255.255.255.0", virtualbox__intnet: "broadcast_router-south-3", auto_config: true
hostc.vm.provision "shell", run: "always", inline: <<-SHELL
echo "Static Routig configuration Started for hostc"
sudo sysctl -w net.ipv4.ip_forward=1
sudo route add -net 192.168.3.0 netmask 255.255.255.0 gw 192.168.3.254 dev eth1
echo 'THIS IS CUSTUM SCRIPT' 
echo "Configuration END"
echo "hostc is ready to Use"
SHELL
hostc.vm.provider "virtualbox" do |vb|
vb.memory = 1024
end
end
end
