#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import os


# In[4]:


f = open("OSPFRoutingvagrant.txt", "w")
f.write("# -*- mode: ruby -*- \n# vi: set ft=ruby :\n\n")
f.write("#All Vagrant configuration is done below. The 2 in Vagrant.configure\n#configures the configuration version we support older styles for\n#backwards compatibility. Please don't change it unless you know what\n#you're doing.\n")
f.write("Vagrant.configure(\"2\") do |config|\n")
f.write("config.vm.box_check_update = true\n")
f.write("config.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.customize [\"modifyvm\", :id, \"--usb\", \"on\"]\n")
f.write("vb.customize [\"modifyvm\", :id, \"--usbehci\", \"off\"]\n")
f.write("vb.customize [\"modifyvm\", :id, \"--nicpromisc2\", \"allow-all\"]\n")
f.write("vb.customize [\"modifyvm\", :id, \"--nicpromisc3\", \"allow-all\"]\n")
f.write("vb.customize [\"modifyvm\", :id, \"--nicpromisc4\", \"allow-all\"]\n")
f.write("vb.customize [\"modifyvm\", :id, \"--nicpromisc5\", \"allow-all\"]\n")
f.write("vb.cpus = 1\n")
f.write("end\n")


f.write("config.vm.define \"router-1\" do |router1|\n")
f.write("router1.vm.box = \"bento/ubuntu-16.04\"\n")
f.write("router1.vm.hostname = \"router-1\"\n")
f.write("router1.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-south-1\", auto_config: false\n")
f.write("router1.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-inter-1\", auto_config: false\n")
f.write("router1.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-inter-3\", auto_config: false\n")
f.write("router1.vm.provision \"shell\", inline: <<-SHELL\n")
f.write("echo \" Quagga Router-1 start installing\"\n")
f.write("#sudo sysctl -w net.ipv4.ip_forward=1\n")
f.write("sudo apt-get update\n")
f.write("sudo apt-get install quagga quagga-doc traceroute\n")
f.write("sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf\n")
f.write("sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf\n")
f.write("sudo chown quagga.quaggavty /etc/quagga/*.conf\n")
f.write("sudo /etc/init.d/quagga start\n")
f.write("sudo sed -i s'/zebra=no/zebra=yes/' /etc/quagga/daemons\n")
f.write("sudo sed -i s'/ospfd=no/ospfd=yes/' /etc/quagga/daemons\n")
f.write("sudo echo 'VTYSH_PAGER=more' >>/etc/environment\n")
f.write("sudo echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc\n")
f.write("sudo /etc/init.d/quagga restart\n")
f.write("echo \"Routing Protocol ospf Configuration Started\"\n")
f.write("sudo vtysh -c '\n")
f.write("configure terminal\n")
f.write("router ospf\n")
f.write("network 192.168.1.0/24 area 0\n")
f.write("network 192.168.100.0/24 area 0\n") 
f.write("network 192.168.101.0/24 area 0\n") 
f.write("exit\n")
f.write("interface eth1\n")
f.write("ip address 192.168.1.254/24\n")
f.write("exit\n")
f.write("interface eth2\n")
f.write("ip address 192.168.100.1/24\n")
f.write("exit\n")
f.write("interface eth3\n")
f.write("ip address 192.168.101.2/24\n")
f.write("do write\n")
f.write("exit\n")
f.write("exit\n")
f.write("ip forwarding\n")
f.write("exit'\n")
f.write("echo \"Configuration END\"\n")
f.write("echo \"Router--1 is ready to Use\"\n")
f.write("SHELL\n")
f.write("#router1.vm.provision \"shell\", path: \"common.sh\"\n")
f.write("router1.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.memory = 1024\n")
f.write("end\n")
f.write("end\n")
f.write("config.vm.define \"router-2\" do |router2|\n")
f.write("router2.vm.box = \"bento/ubuntu-16.04\"\n")
f.write("router2.vm.hostname = \"router-2\"\n")
f.write("router2.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-south-2\", auto_config: false\n")
f.write("router2.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-inter-2\", auto_config: false\n")
f.write("router2.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-inter-1\", auto_config: false\n")
f.write("router2.vm.provision \"shell\", inline: <<-SHELL\n")
f.write("echo \" Quagga Router-2 start installing\"\n")
f.write("#sudo sysctl -w net.ipv4.ip_forward=1\n")
f.write("sudo apt-get update\n")
f.write("sudo apt-get install quagga quagga-doc traceroute\n")
f.write("sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf\n")
f.write("sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf\n")
f.write("sudo chown quagga.quaggavty /etc/quagga/*.conf\n")
f.write("sudo /etc/init.d/quagga start\n")
f.write("sudo sed -i s'/zebra=no/zebra=yes/' /etc/quagga/daemons\n")
f.write("sudo sed -i s'/ospfd=no/ospfd=yes/' /etc/quagga/daemons\n")
f.write("sudo echo 'VTYSH_PAGER=more' >>/etc/environment\n")
f.write("sudo echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc\n")
f.write("sudo /etc/init.d/quagga restart\n")
f.write("echo \"Routing Protocol ospf Configuration Started\"\n")
f.write("sudo vtysh -c '\n")
f.write("configure terminal\n")
f.write("router ospf\n")
f.write("network 192.168.2.0/24 area 0.0.0.0\n")
f.write("network 192.168.100.0/24 area 0.0.0.0\n")
f.write("network 192.168.102.0/24 area 0.0.0.0\n")
f.write("interface eth1\n")
f.write("ip address 192.168.2.254/24\n")
f.write("exit\n")
f.write("interface eth2\n")
f.write("ip address 192.168.100.2/24\n")
f.write("exit\n")
f.write("interface eth3\n")
f.write("ip address 192.168.102.2/24\n")
f.write("do write\n")
f.write("exit\n")
f.write("exit\n")
f.write("ip forwarding\n")
f.write("exit'\n")
f.write("echo \"Configuration END\"\n")
f.write("echo \"Router--2 is ready to Use\"\n")	
f.write("SHELL\n")
f.write("router2.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.memory = 1024\n")
f.write("end\n")
f.write("end\n")
f.write("config.vm.define \"router-3\" do |router3|\n")
f.write("router3.vm.box = \"bento/ubuntu-16.04\"\n")
f.write("router3.vm.hostname = \"router-3\"\n")
f.write("router3.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-south-3\", auto_config: false\n")
f.write("router3.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-inter-3\", auto_config: false\n")
f.write("router3.vm.network \"private_network\", virtualbox__intnet: \"broadcast_router-inter-2\", auto_config: false\n")
f.write("router3.vm.provision \"shell\", inline: <<-SHELL\n")
f.write("echo \"Quagga Router-3 start installing\"\n")
f.write("#sudo sysctl -w net.ipv4.ip_forward=1\n")
f.write("sudo apt-get update\n")
f.write("sudo apt-get install quagga quagga-doc traceroute\n")
f.write("sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf\n")
f.write("sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf\n")
f.write("sudo chown quagga.quaggavty /etc/quagga/*.conf\n")
f.write("sudo /etc/init.d/quagga start\n")
f.write("sudo sed -i s'/zebra=no/zebra=yes/' /etc/quagga/daemons\n")
f.write("sudo sed -i s'/ospfd=no/ospfd=yes/' /etc/quagga/daemons\n")
f.write("sudo echo 'VTYSH_PAGER=more' >>/etc/environment\n")
f.write("sudo echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc\n")
f.write("sudo /etc/init.d/quagga restart\n")
f.write("echo \"Routing Protocol ospf Configuration Started\"\n")
f.write("sudo vtysh -c '\n")
f.write("configure terminal\n")
f.write("router ospf\n")
f.write("network 192.168.3.0/24 area 0.0.0.0\n")
f.write("network 192.168.101.0/24 area 0.0.0.0\n")
f.write("network 192.168.102.0/24 area 0.0.0.0\n")
f.write("interface eth1\n")
f.write("ip address 192.168.3.254/24\n")
f.write("exit\n")
f.write("interface eth2\n")
f.write("ip address 192.168.101.1/24\n")
f.write("exit\n")
f.write("interface eth3\n")
f.write("ip address 192.168.102.1/24\n")
f.write("do write\n")
f.write("exit\n")
f.write("exit\n")
f.write("ip forwarding\n")
f.write("exit'\n")
f.write("echo \"Configuration END\"\n")
f.write("echo \"Router--3 is ready to Use\"\n")
f.write("SHELL\n")
f.write("router3.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.memory = 1024\n")
f.write("end\n")
f.write("end\n")
f.write("config.vm.define \"host-a\" do |hosta|\n")
f.write("hosta.vm.box = \"bento/ubuntu-16.04\"\n")
f.write("hosta.vm.hostname = \"host-a\"\n")
f.write("hosta.vm.network \"private_network\", ip: \"192.168.1.1\", netmask: \"255.255.255.0\", virtualbox__intnet: \"broadcast_router-south-1\", auto_config: true\n")
f.write("hosta.vm.provision \"shell\", run: \"always\", inline: <<-SHELL\n")
f.write("echo \"Static Routig configuration Started for Host--A\"\n")
f.write("sudo sysctl -w net.ipv4.ip_forward=1\n")
f.write("sudo route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.254 dev eth1\n")
f.write("echo \"Configuration END\"\n")
f.write("echo \"Host--A is ready to Use\"\n")
f.write("SHELL\n")
f.write("hosta.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.memory = 1024\n")
f.write("end\n")
f.write("end\n")
f.write("config.vm.define \"host-b\" do |hostb|\n")
f.write("hostb.vm.box = \"bento/ubuntu-16.04\"\n")
f.write("hostb.vm.hostname = \"host-b\"\n")
f.write("hostb.vm.network \"private_network\", ip: \"192.168.2.1\", netmask: \"255.255.255.0\", virtualbox__intnet: \"broadcast_router-south-2\", auto_config: true\n")
f.write("hostb.vm.provision \"shell\", run: \"always\", inline: <<-SHELL\n")
f.write("echo \"Static Routig configuration Started for Host--B\"\n")
f.write("sudo sysctl -w net.ipv4.ip_forward=1\n")
f.write("sudo route add -net 192.168.2.0 netmask 255.255.255.0 gw 192.168.2.254 dev eth1\n")
f.write("echo \"Configuration END\"\n")
f.write("echo \"Host--B is ready to Use\"\n")
f.write("SHELL\n")
f.write("hostb.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.memory = 1024\n")
f.write("end\n")
f.write("end\n")
f.write("config.vm.define \"host-c\" do |hostc|\n")
f.write("hostc.vm.box = \"bento/ubuntu-16.04\"\n")
f.write("hostc.vm.hostname = \"host-c\"\n")
f.write("hostc.vm.network \"private_network\", ip: \"192.168.3.1\", netmask: \"255.255.255.0\", virtualbox__intnet: \"broadcast_router-south-3\", auto_config: true\n")
f.write("hostc.vm.provision \"shell\", run: \"always\", inline: <<-SHELL\n")
f.write("echo \"Static Routig configuration Started\"\n")
f.write("sudo sysctl -w net.ipv4.ip_forward=1\n")
f.write("sudo route add -net 192.168.3.0 netmask 255.255.255.0 gw 192.168.3.254 dev eth1\n")
f.write("echo \"Configuration END\"\n")
f.write("echo \"Host--C is ready to Use\"\n")
f.write("SHELL\n")
f.write("hostc.vm.provider \"virtualbox\" do |vb|\n")
f.write("vb.memory = 1024\n")
f.write("end\n")
f.write("end\n")
f.write("end\n")


#open and read the file after the appending:
f = open("OSPFRoutingvagrant.txt", "r")
print(f.read())


# In[ ]:




